At line no: 1 type_specifier : INT

int

At line no: 1 type_specifier : INT

int

At line no: 1 parameter_list : type_specifier ID

int arg1

At line no: 1 type_specifier : INT

int

At line no: 1 parameter_list : parameter_list COMMA type_specifier ID

int arg1, int arg2

At line no: 2 factor : CONST_INT

0

At line no: 2 unary_expression : factor

0

At line no: 2 term : unary_expression

0

At line no: 2 simple_expression : term

0

At line no: 2 rel_expression : simple_expression

0

At line no: 2 logic_expression : rel_expression

0

At line no: 2 expression : logic_expression

0

At line no: 2 statement : RETURN expression SEMICOLON

return 0;

At line no: 2 statements : statement

return 0;

At line no: 3 compound_statement : LCURL statements RCURL

{return 0;}


 ScopeTable # 2
 0--> 
 1--> 
 2-->  < arg1 : ID> 
 3--> 
 4--> 
 5--> 
 6-->  < arg2 : ID> 
 7--> 
 8--> 
 9--> 

 ScopeTable # 1
 0--> 
 1--> 
 2--> 
 3--> 
 4-->  < otherfunc : ID> 
 5--> 
 6--> 
 7--> 
 8--> 
 9--> 
At line no: 3 func_definition : type_specifier ID LPAREN parameter_list RPAREN compound_statement

int otherfunc(int arg1, int arg2)
{return 0;}

At line no: 3 unit : func_definition

int otherfunc(int arg1, int arg2)
{return 0;}


At line no: 3 program : unit

int otherfunc(int arg1, int arg2)
{return 0;}



At line no: 5 type_specifier : INT

int

At line no: 5 type_specifier : INT

int

At line no: 5 parameter_list : type_specifier ID

int arg3

At line no: 5 type_specifier : INT

int

At line no: 5 parameter_list : parameter_list COMMA type_specifier ID

int arg3, int arg4

At line no: 6 factor : CONST_INT

0

At line no: 6 unary_expression : factor

0

At line no: 6 term : unary_expression

0

At line no: 6 simple_expression : term

0

At line no: 6 rel_expression : simple_expression

0

At line no: 6 logic_expression : rel_expression

0

At line no: 6 expression : logic_expression

0

At line no: 6 statement : RETURN expression SEMICOLON

return 0;

At line no: 6 statements : statement

return 0;

At line no: 7 compound_statement : LCURL statements RCURL

{return 0;}


 ScopeTable # 2
 0-->  < arg3 : ID> 
 1--> 
 2--> 
 3--> 
 4-->  < arg4 : ID> 
 5--> 
 6--> 
 7--> 
 8--> 
 9--> 

 ScopeTable # 1
 0--> 
 1--> 
 2--> 
 3--> 
 4-->  < otherfunc : ID> 
 5--> 
 6-->  < otherfunc2 : ID> 
 7--> 
 8--> 
 9--> 
At line no: 7 func_definition : type_specifier ID LPAREN parameter_list RPAREN compound_statement

int otherfunc2(int arg3, int arg4)
{return 0;}

At line no: 7 unit : func_definition

int otherfunc2(int arg3, int arg4)
{return 0;}


At line no: 7 program : program unit

int otherfunc(int arg1, int arg2)
{return 0;}

int otherfunc2(int arg3, int arg4)
{return 0;}



At line no: 10 type_specifier : INT

int

At line no: 12 type_specifier : INT

int

At line no: 12 declaration_list : ID

a

At line no: 12 var_declaration : type_specifier declaration_list SEMICOLON

int a;


At line no: 12 statement : var_declaration

int a;


At line no: 12 statements : statement

int a;


At line no: 14 variable : ID

a

At line no: 14 factor : CONST_INT

1

At line no: 14 unary_expression : factor

1

At line no: 14 term : unary_expression

1

At line no: 14 simple_expression : term

1

At line no: 14 factor : CONST_INT

2

At line no: 14 unary_expression : factor

2

At line no: 14 term : unary_expression

2

At line no: 14 simple_expression : simple_expression ADDOP term

1 + 2

At line no: 14 factor : CONST_INT

3

At line no: 14 unary_expression : factor

3

At line no: 14 term : unary_expression

3

At line no: 14 simple_expression : simple_expression ADDOP term

1 + 2 + 3

At line no: 14 rel_expression : simple_expression

1 + 2 + 3

At line no: 14 logic_expression : rel_expression

1 + 2 + 3

At line no: 14 expression : variable ASSIGNOP logic_expression

a = 1 + 2 + 3

At line no: 14 expression_statement : expression SEMICOLON

a = 1 + 2 + 3;


At line no: 14 statement : expression_statement

a = 1 + 2 + 3;


At line no: 14 statements : statements statement

int a;
a = 1 + 2 + 3;


At line no: 16 factor : CONST_INT

0

At line no: 16 unary_expression : factor

0

At line no: 16 term : unary_expression

0

At line no: 16 simple_expression : term

0

At line no: 16 rel_expression : simple_expression

0

At line no: 16 logic_expression : rel_expression

0

At line no: 16 expression : logic_expression

0

At line no: 16 statement : RETURN expression SEMICOLON

return 0;

At line no: 16 statements : statements statement

int a;
a = 1 + 2 + 3;
return 0;

At line no: 17 compound_statement : LCURL statements RCURL

{int a;
a = 1 + 2 + 3;
return 0;}


 ScopeTable # 2
 0--> 
 1--> 
 2--> 
 3--> 
 4--> 
 5--> 
 6--> 
 7--> 
 8-->  < a : ID> 
 9--> 

 ScopeTable # 1
 0--> 
 1--> 
 2-->  < main : ID> 
 3--> 
 4-->  < otherfunc : ID> 
 5--> 
 6-->  < otherfunc2 : ID> 
 7--> 
 8--> 
 9--> 
At line no: 17 func_definition : type_specifier ID LPAREN RPAREN compound_statement

int main()
 {int a;
a = 1 + 2 + 3;
return 0;}

At line no: 17 unit : func_definition

int main()
 {int a;
a = 1 + 2 + 3;
return 0;}


At line no: 17 program : program unit

int otherfunc(int arg1, int arg2)
{return 0;}

int otherfunc2(int arg3, int arg4)
{return 0;}

int main()
 {int a;
a = 1 + 2 + 3;
return 0;}



At line no: 17 start : program

int otherfunc(int arg1, int arg2)
{return 0;}

int otherfunc2(int arg3, int arg4)
{return 0;}

int main()
 {int a;
a = 1 + 2 + 3;
return 0;}





 ScopeTable # 1
 0--> 
 1--> 
 2-->  < main : ID> 
 3--> 
 4-->  < otherfunc : ID> 
 5--> 
 6-->  < otherfunc2 : ID> 
 7--> 
 8--> 
 9--> 
Total Lines: 17
Total Errors: 0
Total Errors: 0
