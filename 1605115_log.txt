At line no: 3 type_specifier : INT

int

At line no: 3 declaration_list : ID

a

At line no: 3 var_declaration : type_specifier declaration_list SEMICOLON

int a;


At line no: 3 unit : var_declaration

int a;



At line no: 3 program : unit

int a;




At line no: 4 type_specifier : INT

int

At line no: 4 declaration_list : ID LTHIRD CONST_INT RTHIRD

b[3]

At line no: 4 var_declaration : type_specifier declaration_list SEMICOLON

int b[3];


At line no: 4 unit : var_declaration

int b[3];



At line no: 4 program : program unit

int a;


int b[3];




At line no: 6 type_specifier : VOID

void

At line no: 6 func_declaration : type_specifier ID LPAREN RPAREN SEMICOLON	

void func3();


At line no: 6 unit : func_declaration

void func3();



At line no: 6 program : program unit

int a;


int b[3];


void func3();




At line no: 9 type_specifier : VOID

void

At line no: 9 type_specifier : INT

int

At line no: 9 parameter_list : type_specifier ID

int a

At line no: 9 type_specifier : FLOAT

float

At line no: 9 parameter_list : parameter_list COMMA type_specifier ID

int a, float b

At line no: 11 type_specifier : INT

int

At line no: 11 declaration_list : ID LTHIRD CONST_INT RTHIRD

b[5]

At line no: 11 var_declaration : type_specifier declaration_list SEMICOLON

int b[5];


At line no: 11 statement : var_declaration

int b[5];


At line no: 11 statements : statement

int b[5];


At line no: 12 variable : ID

a

At line no: 12 factor : variable

a

At line no: 12 unary_expression : factor

a

At line no: 12 term : unary_expression

a

At line no: 12 simple_expression : term

a

At line no: 12 rel_expression : simple_expression

a

At line no: 12 logic_expression : rel_expression

a

At line no: 12 expression : logic_expression

a

At line no: 12 statement : RETURN expression SEMICOLON

return a;

At line no: 12 statements : statements statement

int b[5];
return a;

At line no: 13 compound_statement : LCURL statements RCURL

{int b[5];
return a;}


 ScopeTable # 2
 0--> 
 1--> 
 2-->  < b : ID> 
 3--> 
 4--> 
 5--> 
 6--> 
 7--> 
 8-->  < a : ID> 
 9--> 

 ScopeTable # 1
 0--> 
 1--> 
 2-->  < b : ID> 
 3--> 
 4--> 
 5--> 
 6-->  < func : ID> 
 7--> 
 8-->  < a : ID>  < func3 : ID> 
 9--> 
At line no: 13 func_definition : type_specifier ID LPAREN parameter_list RPAREN compound_statement

void func(int a, float b)
{int b[5];
return a;}

At line no: 13 unit : func_definition

void func(int a, float b)
{int b[5];
return a;}


At line no: 13 program : program unit

int a;


int b[3];


void func3();


void func(int a, float b)
{int b[5];
return a;}



At line no: 15 type_specifier : INT

int

At line no: 16 type_specifier : INT

int

At line no: 16 declaration_list : ID

int1

At line no: 16 declaration_list : declaration_list COMMA ID

int1, int2

At line no: 16 var_declaration : type_specifier declaration_list SEMICOLON

int int1, int2;


At line no: 16 statement : var_declaration

int int1, int2;


At line no: 16 statements : statement

int int1, int2;


At line no: 17 type_specifier : FLOAT

float

At line no: 17 declaration_list : ID

float1

At line no: 17 declaration_list : declaration_list COMMA ID

float1, float2

At line no: 17 var_declaration : type_specifier declaration_list SEMICOLON

float float1, float2;


At line no: 17 statement : var_declaration

float float1, float2;


At line no: 17 statements : statements statement

int int1, int2;
float float1, float2;


At line no: 20 type_specifier : FLOAT

float

At line no: 20 declaration_list : ID

int1

At line no: 20 var_declaration : type_specifier declaration_list SEMICOLON

float int1;


At line no: 20 statement : var_declaration

float int1;


At line no: 20 statements : statement

float int1;


At line no: 22 variable : ID

int1

At line no: 22 factor : variable

int1

At line no: 22 unary_expression : factor

int1

At line no: 22 term : unary_expression

int1

At line no: 22 simple_expression : term

int1

At line no: 22 rel_expression : simple_expression

int1

At line no: 22 logic_expression : rel_expression

int1

At line no: 22 arguments : logic_expression

int1

At line no: 22 variable : ID

float1

At line no: 22 factor : variable

float1

At line no: 22 unary_expression : factor

float1

At line no: 22 term : unary_expression

float1

At line no: 22 simple_expression : term

float1

At line no: 22 rel_expression : simple_expression

float1

At line no: 22 logic_expression : rel_expression

float1

At line no: 22 arguments : arguments COMMA logic_expression

int1,float1

At line no: 22 argument_list : arguments

int1,float1

At line no: 22 factor : ID LPAREN argument_list RPAREN

func(int1,float1)

At line no: 22 unary_expression : factor

func(int1,float1)

At line no: 22 term : unary_expression

func(int1,float1)

At line no: 22 simple_expression : term

func(int1,float1)

At line no: 22 rel_expression : simple_expression

func(int1,float1)

At line no: 22 logic_expression : rel_expression

func(int1,float1)

At line no: 22 expression : logic_expression

func(int1,float1)

At line no: 22 expression_statement : expression SEMICOLON

func(int1,float1);


At line no: 22 statement : expression_statement

func(int1,float1);


At line no: 22 statements : statements statement

float int1;
func(int1,float1);


At line no: 23 compound_statement : LCURL statements RCURL

{float int1;
func(int1,float1);
}


 ScopeTable # 3
 0--> 
 1--> 
 2-->  < int1 : ID> 
 3--> 
 4--> 
 5--> 
 6--> 
 7--> 
 8--> 
 9--> 

 ScopeTable # 2
 0-->  < float1 : ID> 
 1--> 
 2-->  < int1 : ID> 
 3--> 
 4-->  < float2 : ID> 
 5--> 
 6-->  < int2 : ID> 
 7--> 
 8--> 
 9--> 

 ScopeTable # 1
 0--> 
 1--> 
 2-->  < b : ID> 
 3--> 
 4--> 
 5--> 
 6-->  < func : ID> 
 7--> 
 8-->  < a : ID>  < func3 : ID> 
 9--> 
At line no: 23 statement : compound_statement

{float int1;
func(int1,float1);
}

At line no: 23 statements : statements statement

int int1, int2;
float float1, float2;
{float int1;
func(int1,float1);
}

At line no: 24 compound_statement : LCURL statements RCURL

{int int1, int2;
float float1, float2;
{float int1;
func(int1,float1);
}}


 ScopeTable # 2
 0-->  < float1 : ID> 
 1--> 
 2-->  < int1 : ID> 
 3--> 
 4-->  < float2 : ID> 
 5--> 
 6-->  < int2 : ID> 
 7--> 
 8--> 
 9--> 

 ScopeTable # 1
 0--> 
 1--> 
 2-->  < b : ID> 
 3--> 
 4--> 
 5--> 
 6-->  < func : ID> 
 7--> 
 8-->  < a : ID>  < func3 : ID> 
 9--> 
At line no: 24 func_definition : type_specifier ID LPAREN RPAREN compound_statement

int func3()
 {int int1, int2;
float float1, float2;
{float int1;
func(int1,float1);
}}

At line no: 24 unit : func_definition

int func3()
 {int int1, int2;
float float1, float2;
{float int1;
func(int1,float1);
}}


At line no: 24 program : program unit

int a;


int b[3];


void func3();


void func(int a, float b)
{int b[5];
return a;}

int func3()
 {int int1, int2;
float float1, float2;
{float int1;
func(int1,float1);
}}



At line no: 28 type_specifier : INT

int

At line no: 30 type_specifier : INT

int

At line no: 30 declaration_list : ID LTHIRD CONST_INT RTHIRD

a[2]

At line no: 30 declaration_list : declaration_list COMMA ID

a[2], c

At line no: 30 declaration_list : declaration_list COMMA ID

a[2], c, i

At line no: 30 declaration_list : declaration_list COMMA ID

a[2], c, i, j

At line no: 30 var_declaration : type_specifier declaration_list SEMICOLON

int a[2], c, i, j;


At line no: 30 statement : var_declaration

int a[2], c, i, j;


At line no: 30 statements : statement

int a[2], c, i, j;


At line no: 30 type_specifier : FLOAT

float

At line no: 30 declaration_list : ID LTHIRD CONST_INT RTHIRD

farr[3]

At line no: 30 var_declaration : type_specifier declaration_list SEMICOLON

float farr[3];


At line no: 30 statement : var_declaration

float farr[3];


At line no: 30 statements : statements statement

int a[2], c, i, j;
float farr[3];


At line no: 31 variable : ID

c

At line no: 31 factor : variable

c

At line no: 31 unary_expression : factor

c

At line no: 31 term : unary_expression

c

At line no: 31 simple_expression : term

c

At line no: 31 rel_expression : simple_expression

c

At line no: 31 logic_expression : rel_expression

c

At line no: 31 arguments : logic_expression

c

At line no: 31 variable : ID

i

At line no: 31 factor : variable

i

At line no: 31 unary_expression : factor

i

At line no: 31 term : unary_expression

i

At line no: 31 simple_expression : term

i

At line no: 31 rel_expression : simple_expression

i

At line no: 31 logic_expression : rel_expression

i

At line no: 31 arguments : arguments COMMA logic_expression

c,i

At line no: 31 variable : ID

j

At line no: 31 factor : variable

j

At line no: 31 unary_expression : factor

j

At line no: 31 term : unary_expression

j

At line no: 31 simple_expression : term

j

At line no: 31 rel_expression : simple_expression

j

At line no: 31 logic_expression : rel_expression

j

At line no: 31 arguments : arguments COMMA logic_expression

c,i,j

At line no: 31 argument_list : arguments

c,i,j

At line no: 31 factor : ID LPAREN argument_list RPAREN

func(c,i,j)

At line no: 31 unary_expression : factor

func(c,i,j)

At line no: 31 term : unary_expression

func(c,i,j)

At line no: 31 simple_expression : term

func(c,i,j)

At line no: 31 factor : CONST_INT

34

At line no: 31 unary_expression : factor

34

At line no: 31 term : unary_expression

34

At line no: 31 simple_expression : simple_expression ADDOP term

func(c,i,j) + 34

At line no: 31 rel_expression : simple_expression

func(c,i,j) + 34

At line no: 31 logic_expression : rel_expression

func(c,i,j) + 34

At line no: 31 expression : logic_expression

func(c,i,j) + 34

At line no: 31 variable : ID LTHIRD expression RTHIRD

a[func(c,i,j) + 34]

At line no: 31 factor : CONST_INT

1

At line no: 31 unary_expression : factor

1

At line no: 31 term : unary_expression

1

At line no: 31 simple_expression : term

1

At line no: 31 rel_expression : simple_expression

1

At line no: 31 logic_expression : rel_expression

1

At line no: 31 expression : variable ASSIGNOP logic_expression

a[func(c,i,j) + 34] = 1

At line no: 31 expression_statement : expression SEMICOLON

a[func(c,i,j) + 34] = 1;


At line no: 31 statement : expression_statement

a[func(c,i,j) + 34] = 1;


At line no: 31 statements : statements statement

int a[2], c, i, j;
float farr[3];
a[func(c,i,j) + 34] = 1;


At line no: 32 variable : ID

i

At line no: 32 factor : CONST_INT

2

At line no: 32 unary_expression : factor

2

At line no: 32 term : unary_expression

2

At line no: 32 factor : CONST_INT

3

At line no: 32 unary_expression : factor

3

At line no: 32 term : unary_expression

3

At line no: 32 simple_expression : term

3

At line no: 32 rel_expression : simple_expression

3

At line no: 32 logic_expression : rel_expression

3

At line no: 32 arguments : logic_expression

3

At line no: 32 factor : CONST_INT

2

At line no: 32 unary_expression : factor

2

At line no: 32 term : unary_expression

2

At line no: 32 simple_expression : term

2

At line no: 32 rel_expression : simple_expression

2

At line no: 32 logic_expression : rel_expression

2

At line no: 32 arguments : arguments COMMA logic_expression

3,2

At line no: 32 argument_list : arguments

3,2

At line no: 32 factor : ID LPAREN argument_list RPAREN

func(3,2)

At line no: 32 unary_expression : factor

func(3,2)

At line no: 32 term : term MULOP unary_expression

2 % func(3,2)

At line no: 32 simple_expression : term

2 % func(3,2)

At line no: 32 rel_expression : simple_expression

2 % func(3,2)

At line no: 32 logic_expression : rel_expression

2 % func(3,2)

At line no: 32 expression : variable ASSIGNOP logic_expression

i = 2 % func(3,2)

At line no: 32 expression_statement : expression SEMICOLON

i = 2 % func(3,2);


At line no: 32 statement : expression_statement

i = 2 % func(3,2);


At line no: 32 statements : statements statement

int a[2], c, i, j;
float farr[3];
a[func(c,i,j) + 34] = 1;
i = 2 % func(3,2);


At line no: 35 variable : ID

j

At line no: 35 factor : CONST_INT

2

At line no: 35 unary_expression : factor

2

At line no: 35 term : unary_expression

2

At line no: 35 factor : CONST_FLOAT

3.7

At line no: 35 unary_expression : factor

3.7

At line no: 35 term : term MULOP unary_expression

2 % 3.7

At line no: 35 simple_expression : term

2 % 3.7

At line no: 35 rel_expression : simple_expression

2 % 3.7

At line no: 35 logic_expression : rel_expression

2 % 3.7

At line no: 35 expression : variable ASSIGNOP logic_expression

j = 2 % 3.7

At line no: 35 expression_statement : expression SEMICOLON

j = 2 % 3.7;


At line no: 35 statement : expression_statement

j = 2 % 3.7;


At line no: 35 statements : statements statement

int a[2], c, i, j;
float farr[3];
a[func(c,i,j) + 34] = 1;
i = 2 % func(3,2);
j = 2 % 3.7;


At line no: 36 variable : ID

a

At line no: 36 factor : CONST_INT

4

At line no: 36 unary_expression : factor

4

At line no: 36 term : unary_expression

4

At line no: 36 simple_expression : term

4

At line no: 36 rel_expression : simple_expression

4

At line no: 36 logic_expression : rel_expression

4

At line no: 36 expression : variable ASSIGNOP logic_expression

a = 4

At line no: 36 expression_statement : expression SEMICOLON

a = 4;


At line no: 36 statement : expression_statement

a = 4;


At line no: 36 statements : statements statement

int a[2], c, i, j;
float farr[3];
a[func(c,i,j) + 34] = 1;
i = 2 % func(3,2);
j = 2 % 3.7;
a = 4;


At line no: 37 variable : ID

asd

At line no: 37 factor : CONST_INT

213

At line no: 37 unary_expression : factor

213

At line no: 37 term : unary_expression

213

At line no: 37 simple_expression : term

213

At line no: 37 rel_expression : simple_expression

213

At line no: 37 logic_expression : rel_expression

213

At line no: 37 expression : variable ASSIGNOP logic_expression

asd = 213

At line no: 37 expression_statement : expression SEMICOLON

asd = 213;


At line no: 37 statement : expression_statement

asd = 213;


At line no: 37 statements : statements statement

int a[2], c, i, j;
float farr[3];
a[func(c,i,j) + 34] = 1;
i = 2 % func(3,2);
j = 2 % 3.7;
a = 4;
asd = 213;


At line no: 39 argument_list : 



At line no: 39 factor : ID LPAREN argument_list RPAREN

func2()

At line no: 39 unary_expression : factor

func2()

At line no: 39 term : unary_expression

func2()

At line no: 39 simple_expression : term

func2()

At line no: 39 rel_expression : simple_expression

func2()

At line no: 39 logic_expression : rel_expression

func2()

At line no: 39 expression : logic_expression

func2()

At line no: 39 expression_statement : expression SEMICOLON

func2();


At line no: 39 statement : expression_statement

func2();


At line no: 39 statements : statements statement

int a[2], c, i, j;
float farr[3];
a[func(c,i,j) + 34] = 1;
i = 2 % func(3,2);
j = 2 % 3.7;
a = 4;
asd = 213;
func2();


At line no: 40 variable : ID

func

At line no: 40 variable : ID

asd

At line no: 40 factor : variable

asd

At line no: 40 unary_expression : factor

asd

At line no: 40 term : unary_expression

asd

At line no: 40 simple_expression : term

asd

At line no: 40 rel_expression : simple_expression

asd

At line no: 40 logic_expression : rel_expression

asd

At line no: 40 expression : variable ASSIGNOP logic_expression

func = asd

At line no: 40 expression_statement : expression SEMICOLON

func = asd;


At line no: 40 statement : expression_statement

func = asd;


At line no: 40 statements : statements statement

int a[2], c, i, j;
float farr[3];
a[func(c,i,j) + 34] = 1;
i = 2 % func(3,2);
j = 2 % 3.7;
a = 4;
asd = 213;
func2();
func = asd;


At line no: 41 factor : CONST_INT

0

At line no: 41 unary_expression : factor

0

At line no: 41 term : unary_expression

0

At line no: 41 simple_expression : term

0

At line no: 41 rel_expression : simple_expression

0

At line no: 41 logic_expression : rel_expression

0

At line no: 41 expression : logic_expression

0

At line no: 41 statement : RETURN expression SEMICOLON

return 0;

At line no: 41 statements : statements statement

int a[2], c, i, j;
float farr[3];
a[func(c,i,j) + 34] = 1;
i = 2 % func(3,2);
j = 2 % 3.7;
a = 4;
asd = 213;
func2();
func = asd;
return 0;

At line no: 42 compound_statement : LCURL statements RCURL

{int a[2], c, i, j;
float farr[3];
a[func(c,i,j) + 34] = 1;
i = 2 % func(3,2);
j = 2 % 3.7;
a = 4;
asd = 213;
func2();
func = asd;
return 0;}


 ScopeTable # 2
 0-->  < i : ID>  < farr : ID> 
 1--> 
 2--> 
 3--> 
 4-->  < j : ID> 
 5--> 
 6-->  < c : ID> 
 7--> 
 8-->  < a : ID> 
 9--> 

 ScopeTable # 1
 0--> 
 1--> 
 2-->  < b : ID>  < main : ID> 
 3--> 
 4--> 
 5--> 
 6-->  < func : ID> 
 7--> 
 8-->  < a : ID>  < func3 : ID> 
 9--> 
At line no: 42 func_definition : type_specifier ID LPAREN RPAREN compound_statement

int main()
 {int a[2], c, i, j;
float farr[3];
a[func(c,i,j) + 34] = 1;
i = 2 % func(3,2);
j = 2 % 3.7;
a = 4;
asd = 213;
func2();
func = asd;
return 0;}

At line no: 42 unit : func_definition

int main()
 {int a[2], c, i, j;
float farr[3];
a[func(c,i,j) + 34] = 1;
i = 2 % func(3,2);
j = 2 % 3.7;
a = 4;
asd = 213;
func2();
func = asd;
return 0;}


At line no: 42 program : program unit

int a;


int b[3];


void func3();


void func(int a, float b)
{int b[5];
return a;}

int func3()
 {int int1, int2;
float float1, float2;
{float int1;
func(int1,float1);
}}

int main()
 {int a[2], c, i, j;
float farr[3];
a[func(c,i,j) + 34] = 1;
i = 2 % func(3,2);
j = 2 % 3.7;
a = 4;
asd = 213;
func2();
func = asd;
return 0;}



At line no: 42 start : program

int a;


int b[3];


void func3();


void func(int a, float b)
{int b[5];
return a;}

int func3()
 {int int1, int2;
float float1, float2;
{float int1;
func(int1,float1);
}}

int main()
 {int a[2], c, i, j;
float farr[3];
a[func(c,i,j) + 34] = 1;
i = 2 % func(3,2);
j = 2 % 3.7;
a = 4;
asd = 213;
func2();
func = asd;
return 0;}





 ScopeTable # 1
 0--> 
 1--> 
 2-->  < b : ID>  < main : ID> 
 3--> 
 4--> 
 5--> 
 6-->  < func : ID> 
 7--> 
 8-->  < a : ID>  < func3 : ID> 
 9--> 
Total Lines: 42
Total Errors: 15
